// =========================================== Important hai ====================== 
time complexity :- O(n)
space complexity :- O(1)

// ===============================================================>>>> with the help of morris traversal <<<<==========================================================
class Solution {
public:
    void flatten(TreeNode* root) {
        TreeNode * curr = root;
        while(curr!= NULL){
            // if left part exist 
               TreeNode * prev = NULL;
               TreeNode * pred = NULL;
            if(curr->left){
               prev = curr->left;
               pred = curr->left;
               while(pred->right){
                  pred = pred->right ;
               }
              pred->right = curr->right;
              curr->right = prev;
              curr->left = NULL;


            }
            // if left part not exist
            curr = curr->right ;

        }
    }
};
