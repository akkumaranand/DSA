// ===========================>>>>>>>>>>>>>>>  method 1 by morris method hai <<<<<< ====================================================
// Time complexity :- O(n)
// space complexity :- O(1)
class Solution {
  public:
    // Function to return a list containing the inorder traversal of the tree.
    vector<int> inOrder(Node* root) {
        
        vector<int> ans;
        Node * curr = root;
        while(curr != NULL){
            if(curr->left == NULL){
                ans.push_back(curr->data);
                curr = curr->right;
            }
            else{
                Node * prev = curr->left;
                while(prev->right && prev->right != curr){
                    prev = prev->right;
                }
                
                // construction of thred
                if(prev->right == NULL){
                    prev->right = curr;
                    curr = curr->left;
                }
                // ye wo case hoga jab pre->right == curr hoga 
                //ye wo wala case hai jaha tread ko hatana hai 
                else{
                    prev->right = NULL;
                    ans.push_back(curr->data);
                    curr = curr->right;
                }
                
            }
        }
        return ans;
    }
};

