// Here most important think is mini how it update and change to get minimun element when element is push or pop to the stack 
// Complexity  : findMIn()   :-O(1) both 
class SpecialStack {
    public:  
    stack<int> s;
    // qki hume space complexity O(1) chahiye isliye hume ye variable mini se karna hogaa
    int mini;   
    void push(int data) {
        // Implement the push() function.
        if(s.empty()){
            s.push(data);
            mini = data;
        }
        else{
            if(mini > data){
             int value = 2*data - mini;
             s.push(value);
             mini = data;
            }
            else{
              s.push(data);
            }
        }
    }

    void pop() {
        // Implement the pop() function.
        if(s.empty()){
            return ;
        }
        else{
            int topelement  = s.top();
            if(topelement< mini){
              int value = (2*mini) - topelement;
              mini = value;
              s.pop();
            }
            else{
                s.pop();
            }
        }
    }

    int top() {
        // Implement the top() function.
        if(s.empty()){
            return -1;
        }
        else{
            int curr = s.top();
            if(curr < mini){
               return mini;
            }
            else{
               return curr;
            }
        }
    }

    int getMin() {
        // Implement the getMin() function.
        if(s.empty()){
            return -1;
        }
        return mini;

    }  
};
