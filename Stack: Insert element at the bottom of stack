#include <bits/stdc++.h> 

// Recursive approach 
void solve(stack<int>& myStack ,int  x ){

if(myStack.empty() ){
    myStack.push(x);
    return ;
}

int pall = myStack.top();
myStack.pop();

// recursive 
solve(myStack , x);

myStack.push(pall);


}

stack<int> pushAtBottom(stack<int>& myStack, int x) 
{
    // Write your code here.
  
    solve(myStack , x  );

    return myStack;
}


-----------------------Iterative approach ----------------------------------------------
#include <bits/stdc++.h> 
stack<int> pushAtBottom(stack<int>& myStack, int x) 
{
   stack<int> temp;
   while(!myStack.empty()){
       temp.push(myStack.top());
       myStack.pop();
   }

   myStack.push(x);

   while(!temp.empty()){
       myStack.push(temp.top());
       temp.pop();
   }

    return myStack;
}





