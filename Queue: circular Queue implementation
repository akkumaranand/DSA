#include <bits/stdc++.h> 

// Rivision important hai dono ha implementation ek baar acche se karna lena philal ke liye  
class CircularQueue{
    int *arr;
    int size;
    int front;
    int rear;
    public:
    // Initialize your data structure.
    CircularQueue(int n){
        // Write your code here.
        size = n;
         arr = new int[size];
        front = -1;
        rear = -1;

    }

    // Enqueues 'X' into the queue. Returns true if it gets pushed into the stack, and false otherwise.
     bool enqueue(int value) {

        // Write your code here.

        // To check whether the queue is full

        if ((front == 0 && rear == size - 1) || (rear == (front - 1) % (size - 1))) {

            return false;

        }

 

        // To push the first element

        if (front == -1) {

            front = rear = 0;

        } else if (rear == size - 1 && front != 0) {

            // To maintain cyclic nature

            rear = 0;

        } else {

            // Normal flow

            rear++;

        }

 

        arr[rear] = value;

 

        return true;

    }

 

    // Dequeues the front element from the queue. Returns -1 if the queue is empty, otherwise returns the dequeued element.

    int dequeue() {

        // Write your code here.

        if (front == -1) {

            return -1;

        }

 

        int ans = arr[front];

        arr[front] = -1;

 

        if (front == rear) {

            front = rear = -1;

        } else if (front == size - 1) {

            front = 0;

        } else {

            front++;

        }

        return ans;

    }

};
