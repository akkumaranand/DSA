void bubbleSort(int arr[], int n) 
{
    //write your code here
    for(int i = 0 ; i<n ; i++){
        int disswap = 0;
        for(int j = 0; j<n-1-i ;  j++){
             if(arr[j] > arr[j+1]){
                 swap(arr[j] , arr[j+1]);
                 disswap = 1;
             }
        }
        if(disswap == 0){
            break;
        }
    }
    
}

// best time complexity = O(n)
// average time complexity = O(n^2) 

// --------:Recursive approach :--------
#include <bits/stdc++.h>

void bubbleSort(int arr[], int n) 
{
    if(n == 1)
    return ;

    int count = 0;
    for(int i = 0 ; i<n-1; i++){
        if(arr[i]> arr[i+1]){
            swap(arr[i] , arr[i+1]);
            count ++;
        }
        
    } 
    if(count == 0){
        return ;
    }

    bubbleSort(arr , n-1);
    
}
